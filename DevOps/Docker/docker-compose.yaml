version: "3"
services:
  # Pides web-app service:
  python-app:
    # build container from Dockerfile located in current directory `.`
    build: .
    # name of image
    image: anvil-web-app:1.0
    # name of container
    container_name: anvil_container
    # Allow for restart if error occurs
    restart: unless-stopped
    user: "dcotton"
    ports:
      - "3030:3030"
    volumes:
      - .:/home/dcotton/app
      - ./www:/home/dcotton/www
      # - /home/cotton/research2023/:/home/dcotton/research2023
    working_dir: /home/dcotton
    command: tail -f /dev/null
    environment:
      - MPLCONFIGDIR=/home/dcotton/matplotlib_config
      - DATABASE_HOST=maria-db
      - DATABASE_PORT=3307
      - DATABASE_USER=cotton_user
      - DATABASE_PASS=db1234
      - DATABASE_NAME=camera_nodes
    depends_on:
      - maria-db
    networks:
      - my-network
  
  # MariaDB Database Service
  maria-db:
  # use latest mariadb image
    image: mariadb:latest
    # name of container:
    container_name: mariadb_container
    restart: unless-stopped
    ports:
      - "3307:3306"
    # Setup database credientials:
    environment:
      - MYSQL_ROOT_PASSWORD=cotton
      - MYSQL_DATABASE=camera_nodes
      - MYSQL_USER=cotton_user
      - MYSQL_PASSWORD=db1234
    volumes:
      # Init script creates database `camera_nodes` and gives access to user `ginuser`
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Mount the init.sql script
    # Put both services on the same network
    networks:
      - my-network

# Create a network allowing for both services (maria-db and python-app) to communicate,
networks:
  my-network:
  

